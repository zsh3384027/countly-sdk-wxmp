<style lang="less">

view{
  font-size: 30rpx;
}

page {
 background-color: #efefef;
 height: 100%;
}
.container {
  height: 100%;
}
.soft-scrollable {
  overflow-y:auto;
  -webkit-overflow-scrolling:touch;
}

.weui-cell{
  background-color: white;
}

.gap{
  margin-top: 20rpx;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import {showAlertDialog} from '@/libs/widget/index'
import Bus from './libs/Bus.js'
import AppCountly from '@/libs/AppCountly.js'
import Http from '@/libs/Http.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/main/home',
      'pages/main/homeMain',
      'pages/main/homeMessage',
      'pages/main/homeContact',
      'pages/main/homeMe',
      'pages/main/webview',
      'pages/main/report'
    ],
    window: {
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      selectedColor: '#0091FA',
      color: '#142841',
      backgroundColor: '#fff',
      list: [
        {
          pagePath: 'pages/main/homeMain',
          text: '首页'
        },
        {
          pagePath: 'pages/main/homeMessage',
          text: '消息'
        },
        {
          pagePath: 'pages/main/homeContact',
          text: '联系人'
        },
        {
          pagePath: 'pages/main/homeMe',
          text: '我的'
        }
      ]
    },
    networkTimeout: {
      request: 15000,
      downloadFile: 10000,
      uploadFile: 10000
    },
    debug: true,
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序展示当地天气、附件案件、案件上报等'
      }
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    // 修复小程序请求并发问题
    this.use('requestfix')
    // 使用wepy.xxx的方式请求小程序原生API都将Promise化
    this.use('promisify')

    // 拦截request请求
    this.intercept('request', {
      // 请求成功后的回调函数
      success (p) {
        // 可以在这里对收到的响应数据对象进行加工处理
        return p
      }
    })
  }

  onLaunch(options) {
    this.$bus = new Bus()
    Http.setServerUrl('https://geoapi.qweather.com')
    this.AppCountly = new AppCountly(this)
    this.AppCountly.init()
    wepy.hideTabBar().catch((res) => {
      console.error('隐藏tabbar失败' + res.errMsg)
    })
    wx.onNetworkStatusChange((res) => {
      if (!res.isConnected) {
        showAlertDialog({
          content: '网络异常，请检查网络配置',
          showCancel: false
        })
      }
    })
  }

  onHide() {
  }

  onShow(options) {
  }
}
</script>
